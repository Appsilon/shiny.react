[{"path":"https://appsilon.github.io/shiny.react/PULL_REQUEST_TEMPLATE.html","id":"changes","dir":"","previous_headings":"","what":"Changes","title":"NA","text":"Closes #","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.react/articles/shiny-react.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tutorial: Porting Liquid Oxygen to Shiny","text":"Liquid Oxygen UI component library based Liquid Design System, focusing accessibility interoperability. provides React bindings can ported Shiny shiny.react. similar concept Microsoft’s Fluent UI Google’s MUI. tutorial (begin ) create liquid R package, make possible use Liquid Oxygen R/Shiny akin shiny.fluent Fluent UI. give enough understanding shiny.react allow use React libraries projects, either creating “wrapper” R packages directly Shiny app. tutorial aimed advanced users feel comfortable Shiny React. need R Node.js installed.","code":""},{"path":"https://appsilon.github.io/shiny.react/articles/shiny-react.html","id":"creating-the-package","dir":"Articles","previous_headings":"","what":"Creating the package","title":"Tutorial: Porting Liquid Oxygen to Shiny","text":"start create new package called liquid. js directory contain Node.js toolchain JavaScript sources compiled single file. file needed use package, add js .Rbuildignore decrease size package. also good idea list dependencies DESCRIPTION file:","code":"usethis::create_package(\"liquid\") usethis::use_build_ignore(\"js\") Imports:   htmltools,   shiny,   shiny.react"},{"path":"https://appsilon.github.io/shiny.react/articles/shiny-react.html","id":"the-r-interface","dir":"Articles","previous_headings":"","what":"The R interface","title":"Tutorial: Porting Liquid Oxygen to Shiny","text":"React, component function takes props returns element. concepts map R directly. R, elements created shiny.react::reactElement(module, name, props). browser, shiny.react create element calling React.createElement(jsmodule[module][name], props). task ensure jsmodule[module][name] yields right component. accomplish , later create liquid.js script set jsmodule global appropriately. free users package include script manually, use HTML dependency. R/components.R let’s define: define components succinctly, let’s create helper. Remember - components functions take props return elements: can now add Liquid components package easily! Let’s try LdButton LdLoading starters.","code":"liquidDependency <- function() {   htmltools::htmlDependency(     name = \"liquid\",     version = \"0.1.0\",     package = \"liquid\",     src = \"www\",     script = \"liquid.js\"   ) } component <- function(name) {   function(...) shiny.react::reactElement(     module = \"@emdgroup-liquid/liquid\",     name = name,     props = shiny.react::asProps(...),     deps = liquidDependency()   ) } #' @export LdButton <- component(\"LdButton\")  #' @export LdLoading <- component(\"LdLoading\")"},{"path":"https://appsilon.github.io/shiny.react/articles/shiny-react.html","id":"adding-liquid","dir":"Articles","previous_headings":"","what":"Adding Liquid","title":"Tutorial: Porting Liquid Oxygen to Shiny","text":"js directory use yarn add Liquid Oxygen library. order use react components need find package exports defined first. need look export keyword names components. case package, exports can found @emdgroup-liquid/liquid/dist/react. use bundler generate liquid.js script following js/src/index.js file: script make Liquid Oxygen library available jsmodule[@emdgroup-liquid/liquid] browser. also load necessary CSS.","code":"yarn init --yes yarn add @emdgroup-liquid/liquid@3.0.0 const Liquid = require('@emdgroup-liquid/liquid/dist/react');  require('@emdgroup-liquid/liquid/dist/css/liquid.css');  window.jsmodule = {   ...window.jsmodule,   '@emdgroup-liquid/liquid': Liquid };"},{"path":"https://appsilon.github.io/shiny.react/articles/shiny-react.html","id":"bundling","dir":"Articles","previous_headings":"","what":"Bundling","title":"Tutorial: Porting Liquid Oxygen to Shiny","text":"use webpack build liquid.js file. handy online tool can use generate configuration webpack. Let’s just pick CSS Styling section copy script js/webpack.config.js. also add dev dependencies suggested tool: Now let’s tweak config bit. change output inst/www/liquid.js: add externals let webpack know look modules provided shiny.react: final js/webpack.config.js looks follows:","code":"yarn add --dev webpack webpack-cli css-loader style-loader output: {   path: path.join(__dirname, '..', 'inst', 'www'),   filename: 'liquid.js' } externals: {   'react': 'jsmodule[\"react\"]',   'react-dom': 'jsmodule[\"react-dom\"]',   '@/shiny.react': 'jsmodule[\"@/shiny.react\"]' } const webpack = require('webpack'); const path = require('path');  const config = {   entry: './src/index.js',   output: {     path: path.join(__dirname, '..', 'inst', 'www'),     filename: 'liquid.js'   },   module: {     rules: [       {         test: /\\.css$/,         use: [           'style-loader',           'css-loader'         ]       }     ]   },   externals: {     'react': 'jsmodule[\"react\"]',     'react-dom': 'jsmodule[\"react-dom\"]',     '@/shiny.react': 'jsmodule[\"@/shiny.react\"]'   } };  module.exports = config;"},{"path":"https://appsilon.github.io/shiny.react/articles/shiny-react.html","id":"building-the-package","dir":"Articles","previous_headings":"","what":"Building the package","title":"Tutorial: Porting Liquid Oxygen to Shiny","text":"ready build package! First , run webpack js directory: generate inst/www/webpack.js bundle. also generate NAMESPACE file: can now install package directly devtools::install() try !","code":"yarn webpack devtools::document()"},{"path":"https://appsilon.github.io/shiny.react/articles/shiny-react.html","id":"using-the-package","dir":"Articles","previous_headings":"","what":"Using the package","title":"Tutorial: Porting Liquid Oxygen to Shiny","text":"Let’s try simple app first test components: Cool! Let’s try something advanced:","code":"library(shiny) library(shiny.react) library(liquid)  shinyApp(   ui = tagList(     LdButton(\"Test Button\"),     LdLoading()   ),   server = function(input, output) {} ) shinyApp(   ui = tagList(     LdButton(       \"Initiate loading\",       onClick = JS(\"(event) => Shiny.setInputValue('loading', true)\")     ),     reactOutput(\"spinner\")   ),   server = function(input, output) {     output$spinner <- renderReact({       if (!is.null(input$loading) && input$loading) LdLoading() else NULL     })   } )"},{"path":"https://appsilon.github.io/shiny.react/articles/shiny-react.html","id":"creating-input-wrappers","dir":"Articles","previous_headings":"","what":"Creating input wrappers","title":"Tutorial: Porting Liquid Oxygen to Shiny","text":"Even simple components can cumbersome use Shiny, evident last example. good idea create .shinyInput wrappers simplify life users. change js/src/index.js following: order create input can used Shiny server need create component hook set value Shiny input. can use InputAdapter shiny.react package easily. documentation states Liquid components dispatch ldchange events, change value Shiny input need set value component changes state. React components use onLdchange prop set value using event.detail. property contains array selected items dropdown. documentation provides information event field contains value input use one documentation. doesn’t can set breakpoint browser investigate fields event object use appropriate one. also add lines R/components.R: rebuilding reinstalling package can now rewrite last Shiny app example :","code":"const Liquid = require('@emdgroup-liquid/liquid/dist/react'); const { InputAdapter } = require('@/shiny.react')  require('@emdgroup-liquid/liquid/dist/css/liquid.css');  const LdSelect = InputAdapter(Liquid.LdSelect, (value, setValue) => ({   onLdchange: (event) => {     setValue(event.detail);   }, }));   window.jsmodule = {   ...window.jsmodule,   '@emdgroup-liquid/liquid': Liquid,   '@/liquid': { LdSelect } }; input <- function(name, defaultValue) {   function(inputId, ..., value = defaultValue) {     shiny.react::reactElement(       module = \"@/liquid\",       name = name,       props = shiny.react::asProps(inputId = inputId, ..., value = value),       deps = liquidDependency()     )   } }  #' @export LdOption <- component(\"LdOption\")  #' @export LdSelect.shinyInput <- input(\"LdSelect\", NULL)  #' @export LdSelect <- component(\"LdSelect\") shinyApp(   ui = tagList(     LdSelect.shinyInput(       placeholder = \"Pick a fruit\",       inputId = \"fruit\",       value = NULL,       LdOption(\"Apple\"),       LdOption(\"Orange\"),       LdOption(\"Strawberry\")     ),     textOutput(\"selectedFruit\")   ),   server = function(input, output) {     output$selectedFruit <- renderText({       input$fruit     })   } )"},{"path":"https://appsilon.github.io/shiny.react/articles/shiny-react.html","id":"notes","dir":"Articles","previous_headings":"","what":"Notes","title":"Tutorial: Porting Liquid Oxygen to Shiny","text":"module name passed shiny.react::createElement() can arbitrary, following convention recommended: modules coming directly npm, use npm name, e.g. @emdgroup-liquid/liquid. modules custom code, use R package name @/ prefix, e.g. @/liquid.","code":""},{"path":"https://appsilon.github.io/shiny.react/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kamil Żyła. Author, maintainer. Jakub Sobolewski. Author. Marek Rogala. Author. Appsilon Sp. z o.o.. Copyright holder.","code":""},{"path":"https://appsilon.github.io/shiny.react/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Żyła K, Sobolewski J, Rogala M (2024). shiny.react: Tools Using React Shiny. R package version 0.4.0, https://github.com/Appsilon/shiny.react, https://appsilon.github.io/shiny.react/.","code":"@Manual{,   title = {shiny.react: Tools for Using React in Shiny},   author = {Kamil Żyła and Jakub Sobolewski and Marek Rogala},   year = {2024},   note = {R package version 0.4.0, https://github.com/Appsilon/shiny.react},   url = {https://appsilon.github.io/shiny.react/}, }"},{"path":"https://appsilon.github.io/shiny.react/index.html","id":"shinyreact-","dir":"","previous_headings":"","what":"Tools for Using React in Shiny","title":"Tools for Using React in Shiny","text":"Use React Shiny applications. R package enables using React Shiny apps used e.g. shiny.fluent package. contains R JS code independent React library (e.g. Fluent UI) wrapped.","code":""},{"path":"https://appsilon.github.io/shiny.react/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Using React in Shiny","text":"Stable version: Development version:","code":"install.packages(\"shiny.react\") remotes::install_github(\"Appsilon/shiny.react\")"},{"path":"https://appsilon.github.io/shiny.react/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Tools for Using React in Shiny","text":"build install package, run:","code":"(cd js && yarn && yarn webpack) Rscript -e 'devtools::document(); devtools::install()'"},{"path":"https://appsilon.github.io/shiny.react/index.html","id":"testing","dir":"","previous_headings":"","what":"Testing","title":"Tools for Using React in Shiny","text":"cd js && yarn lint lints JS code cd js && yarn test runs unit tests JS code Rscript -e \"lintr::lint_package()\" runs linter R code Rscript -e \"devtools::test()\" runs unit tests R code","code":""},{"path":"https://appsilon.github.io/shiny.react/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute?","title":"Tools for Using React in Shiny","text":"want contribute project please submit regular PR, ’re done new feature bug fix. Reporting bug also helpful - please use GitHub issues describe problem detailed possible.","code":""},{"path":"https://appsilon.github.io/shiny.react/index.html","id":"appsilon","dir":"","previous_headings":"","what":"Appsilon","title":"Tools for Using React in Shiny","text":"Appsilon Posit (formerly RStudio) Full Service Certified Partner. Learn appsilon.com. Get touch opensource@appsilon.com Explore Rhinoverse - family R packages built around Rhino!","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/JS.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark character strings as literal JavaScript code — JS","title":"Mark character strings as literal JavaScript code — JS","text":"Copied verbatim htmlwidgets package avoid adding dependency just single function.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/JS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark character strings as literal JavaScript code — JS","text":"","code":"JS(...)"},{"path":"https://appsilon.github.io/shiny.react/reference/JS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark character strings as literal JavaScript code — JS","text":"... Character vectors JavaScript source code (arguments pasted one character string).","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/JS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark character strings as literal JavaScript code — JS","text":"input character vector marked special class.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/ReactContext.html","id":null,"dir":"Reference","previous_headings":"","what":"React context — ReactContext","title":"React context — ReactContext","text":"Render children React.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/ReactContext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"React context — ReactContext","text":"","code":"ReactContext(...)"},{"path":"https://appsilon.github.io/shiny.react/reference/ReactContext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"React context — ReactContext","text":"... Children render.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/ReactContext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"React context — ReactContext","text":"","code":"if (interactive()) shinyApp(   ui = shiny.react:::ReactContext(     \"This text is rendered by React\"   ),   server = function(input, output) {} )"},{"path":"https://appsilon.github.io/shiny.react/reference/asProps.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse arguments as props — asProps","title":"Parse arguments as props — asProps","text":"Converts arguments list can passed props argument reactElement(). Unnamed arguments become children named arguments become attributes element.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/asProps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse arguments as props — asProps","text":"","code":"asProps(...)"},{"path":"https://appsilon.github.io/shiny.react/reference/asProps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse arguments as props — asProps","text":"... Arguments prepare passing props 'React' component","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/asProps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse arguments as props — asProps","text":"list arguments structured suitably reactElement().","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.react/reference/enableReactDebugMode.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable 'React' debug mode — enableReactDebugMode","title":"Enable 'React' debug mode — enableReactDebugMode","text":"Sets shiny.react_DEBUG option TRUE. debug mode, 'shiny.react' load dev version 'React', useful debugging. also set logging level DEBUG. Call function running app enable debugging mode.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/enableReactDebugMode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable 'React' debug mode — enableReactDebugMode","text":"","code":"enableReactDebugMode()"},{"path":"https://appsilon.github.io/shiny.react/reference/enableReactDebugMode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable 'React' debug mode — enableReactDebugMode","text":"Nothing. function called side effects.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/reactDependency.html","id":null,"dir":"Reference","previous_headings":"","what":"'React' library dependency — reactDependency","title":"'React' library dependency — reactDependency","text":"'React' library dependency","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/reactDependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'React' library dependency — reactDependency","text":"","code":"reactDependency(useCdn = FALSE)"},{"path":"https://appsilon.github.io/shiny.react/reference/reactDependency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'React' library dependency — reactDependency","text":"useCdn TRUE, 'React' loaded CDN instead served locally.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/reactDependency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'React' library dependency — reactDependency","text":"htmlDependency object can used attach 'React' library.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/reactElement.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a 'React' element — reactElement","title":"Create a 'React' element — reactElement","text":"Creates shiny.tag can rendered just like 'Shiny' tags well passed props 'React' elements. Typically returned wrapper (\"component\") function, parses arguments asProps() fills arguments.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/reactElement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a 'React' element — reactElement","text":"","code":"reactElement(module, name, props, deps = NULL)"},{"path":"https://appsilon.github.io/shiny.react/reference/reactElement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a 'React' element — reactElement","text":"module JavaScript module import component . name Name component. props Props pass component. deps HTML dependencies attach.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/reactElement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a 'React' element — reactElement","text":"shiny.tag object representing 'React' element.","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.react/reference/reactElement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a 'React' element — reactElement","text":"","code":"Component <- function(...) reactElement(   module = \"@/module\", name = \"Component\", props = asProps(...) )"},{"path":"https://appsilon.github.io/shiny.react/reference/reactOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"'React' output — reactOutput","title":"'React' output — reactOutput","text":"Creates 'Shiny' output can used analogously shiny::uiOutput() preserves 'React' state re-renders.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/reactOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'React' output — reactOutput","text":"","code":"reactOutput(outputId)"},{"path":"https://appsilon.github.io/shiny.react/reference/reactOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'React' output — reactOutput","text":"outputId Id can used render React server","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/reactOutput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'React' output — reactOutput","text":"shiny.tag object can placed UI.","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.react/reference/reactOutput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'React' output — reactOutput","text":"","code":"# This example uses some unexported test components. The components are not exported, # as shiny.react is designed to only provide the machinery for building React-based packages. # See shiny.fluent for a large number of examples.  if (interactive()) {   colors <- list(\"Gold\", \"Lavender\", \"Salmon\")    shinyApp(     ui = bootstrapPage(       reactOutput(\"ui\"),       selectInput(\"color\", label = \"Background color\", choices = colors)     ),     server = function(input, output) {       output$ui <- renderReact(         shiny.react:::Box(           style = list(backgroundColor = input$color),           shiny.react:::Pinger()         )       )     }   ) }"},{"path":"https://appsilon.github.io/shiny.react/reference/renderReact.html","id":null,"dir":"Reference","previous_headings":"","what":"Render 'React' — renderReact","title":"Render 'React' — renderReact","text":"Renders HTML /'React' outputs created reactOutput() (analogously shiny::renderUI()).","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/renderReact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render 'React' — renderReact","text":"","code":"renderReact(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://appsilon.github.io/shiny.react/reference/renderReact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render 'React' — renderReact","text":"expr Expression returning HTML / 'React' render. env Environment evaluate expr. quoted expr quoted expression?","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/renderReact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render 'React' — renderReact","text":"function can assigned output Shiny server function.","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.react/reference/setInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Set input — setInput","title":"Set input — setInput","text":"Creates handler can used onChange similar props 'React' components set value 'Shiny' input one arguments passed handler.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/setInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set input — setInput","text":"","code":"setInput(inputId, jsAccessor)  # S4 method for character,missing setInput(inputId)  # S4 method for character,numeric setInput(inputId, jsAccessor)  # S4 method for character,character setInput(inputId, jsAccessor)"},{"path":"https://appsilon.github.io/shiny.react/reference/setInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set input — setInput","text":"inputId 'Shiny' input ID set value . jsAccessor Index (numeric 0-based index) accessor (JavaScript string) argument use value.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/setInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set input — setInput","text":"ReactData object can passed prop 'React' components.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/setInput.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set input — setInput","text":"argument jsAccessor can empty (assumes jsAccessor = 0) take one following types: valid JavaScript accessor string applied object (example: jsAccessor = \"[0].target.checked\"). valid JavaScript 0-based index. example, calling setInput(\"some_index\", 1) equivalent setInput(\"some_index\", \"[1]\")","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/setInput.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Set input — setInput","text":"setInput(inputId = character, jsAccessor = missing): Uses index jsAccessor = 0 setInput(inputId = character, jsAccessor = numeric): Gets value via index (see examples). setInput(inputId = character, jsAccessor = character): Gets value via accessor (see examples).","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/setInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set input — setInput","text":"","code":"# Same as `setInput(\"some_id\", 0)`. setInput(\"some_id\") #> $type #> [1] \"input\" #>  #> $id #> [1] \"some_id\" #>  #> $jsAccessor #> [1] \"[0]\" #>  #> attr(,\"class\") #> [1] \"ReactData\" \"list\"       # Equivalent to `(...args) => Shiny.setInputValue('some_id', args[1])` in JS. setInput(\"some_id\", 1) #> $type #> [1] \"input\" #>  #> $id #> [1] \"some_id\" #>  #> $jsAccessor #> [1] \"[1]\" #>  #> attr(,\"class\") #> [1] \"ReactData\" \"list\"       # Same as `setInput(\"some_id\", 1)`. setInput(\"some_id\", \"[1]\") #> $type #> [1] \"input\" #>  #> $id #> [1] \"some_id\" #>  #> $jsAccessor #> [1] \"[1]\" #>  #> attr(,\"class\") #> [1] \"ReactData\" \"list\"       # Equivalent to `(...args) => Shiny.setInputValue('some_id', args[0].target.value)` in JS. setInput(\"some_id\", \"[0].target.value\") #> $type #> [1] \"input\" #>  #> $id #> [1] \"some_id\" #>  #> $jsAccessor #> [1] \"[0].target.value\" #>  #> attr(,\"class\") #> [1] \"ReactData\" \"list\""},{"path":"https://appsilon.github.io/shiny.react/reference/shinyReactDependency.html","id":null,"dir":"Reference","previous_headings":"","what":"'shiny.react' JavaScript dependency — shinyReactDependency","title":"'shiny.react' JavaScript dependency — shinyReactDependency","text":"'shiny.react' JavaScript dependency","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/shinyReactDependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'shiny.react' JavaScript dependency — shinyReactDependency","text":"","code":"shinyReactDependency()"},{"path":"https://appsilon.github.io/shiny.react/reference/shinyReactDependency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'shiny.react' JavaScript dependency — shinyReactDependency","text":"htmlDependency object can used attach JavaScript code required 'shiny.react'.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/triggerEvent.html","id":null,"dir":"Reference","previous_headings":"","what":"Trigger event — triggerEvent","title":"Trigger event — triggerEvent","text":"Creates handler can used onClick similar props 'React' components trigger event 'Shiny'.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/triggerEvent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trigger event — triggerEvent","text":"","code":"triggerEvent(inputId)"},{"path":"https://appsilon.github.io/shiny.react/reference/triggerEvent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trigger event — triggerEvent","text":"inputId 'Shiny' input ID trigger event .","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/triggerEvent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trigger event — triggerEvent","text":"ReactData object can passed prop 'React' components.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/updateReactInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Update 'React' input — updateReactInput","title":"Update 'React' input — updateReactInput","text":"Updates inputs created help InputAdapter function (part JavaScript interface). Analogous shiny::updateX() family functions, generic.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/updateReactInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update 'React' input — updateReactInput","text":"","code":"updateReactInput(session = shiny::getDefaultReactiveDomain(), inputId, ...)"},{"path":"https://appsilon.github.io/shiny.react/reference/updateReactInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update 'React' input — updateReactInput","text":"session Session object passed function given shinyServer. inputId Id input object. ... Props modify.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/updateReactInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update 'React' input — updateReactInput","text":"Nothing. function called side effects.","code":""},{"path":"https://appsilon.github.io/shiny.react/reference/updateReactInput.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update 'React' input — updateReactInput","text":"creating wrapper package 'React' library, probably want provide dedicated update function input imitate 'Shiny' interface.","code":""},{"path":"https://appsilon.github.io/shiny.react/news/index.html","id":"shinyreact-030","dir":"Changelog","previous_headings":"","what":"shiny.react 0.3.0","title":"shiny.react 0.3.0","text":"CRAN release: 2022-12-25 reactOutput() can now nested. ShinyProxy longer needed removed JavaScript API. Support rate limiting (debounce throttle) InputAdapter. updateReactInput() now works correctly tibbles.","code":""},{"path":"https://appsilon.github.io/shiny.react/news/index.html","id":"shinyreact-023","dir":"Changelog","previous_headings":"","what":"shiny.react 0.2.3","title":"shiny.react 0.2.3","text":"CRAN release: 2021-09-08 Improved documentation, including tutorial vignette.","code":""},{"path":"https://appsilon.github.io/shiny.react/news/index.html","id":"shinyreact-022","dir":"Changelog","previous_headings":"","what":"shiny.react 0.2.2","title":"shiny.react 0.2.2","text":"updateReactInput() applies namespace automatically. updateReactInput() can used update components created ButtonAdapter.","code":""},{"path":"https://appsilon.github.io/shiny.react/news/index.html","id":"shinyreact-021","dir":"Changelog","previous_headings":"","what":"shiny.react 0.2.1","title":"shiny.react 0.2.1","text":"Minor changes CRAN resubmission.","code":""},{"path":"https://appsilon.github.io/shiny.react/news/index.html","id":"shinyreact-020","dir":"Changelog","previous_headings":"","what":"shiny.react 0.2.0","title":"shiny.react 0.2.0","text":"first public release, several big interface changes: Removed withReact(). Components now work without ! Removed make_input(), make_output() mark_as_react_tag(). Components can now defined combining reactElement() asProps(). Removed reactWidget() - longer applicable / necessary. Renamed ShinyComponentWrapper ShinyBindingWrapper made internal. Added setInput() triggerEvent() helpers.","code":""},{"path":"https://appsilon.github.io/shiny.react/news/index.html","id":"shinyreact-010","dir":"Changelog","previous_headings":"","what":"shiny.react 0.1.0","title":"shiny.react 0.1.0","text":"Initial release made available early access group.","code":""}]
